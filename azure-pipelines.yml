# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
  - master

pr:
 branches:
   include:
     - '*'

pool:
  vmImage: 'windows-latest'

steps:

- script: dir /s

- task: DotNetCoreCLI@2
  displayName: "BuildBot"
  inputs:
    command: 'build'
    projects: 'StackoverflowChatbot/StackoverflowChatbot.csproj'

- script: dotnet test --test-adapter-path:. --logger:nunit --collect "XPlat code coverage"

- script: dir /s

- task: ArchiveFiles@2
  displayName: Zip up results
  inputs:
    rootFolderOrFile: 'StackoverflowChatbot/bin/*'
    includeRootFolder: true
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.SourceBranchName).zip'
    replaceExistingArchive: true
    
- task: AzureFileCopy@4
  condition: startsWith(variables['Build.SourceBranch'], 'refs/heads/')
  inputs:
    SourcePath: '$(Build.ArtifactStagingDirectory)/$(Build.SourceBranchName).zip'
    azureSubscription: 'Visual Studio Enterprise Subscription â€“ MPN(3b6d5445-a69c-4b1e-8776-61de5c3c5a1b)'
    Destination: 'AzureBlob'
    storage: 'leerbcsharpbot'
    ContainerName: 'deploy'

- task: PublishTestResults@2
  inputs:
    testResultsFormat: NUnit
    testResultsFiles: '**/TestResults.xml'
    failTaskOnFailedTests: true

- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: 'cobertura'
    summaryFileLocation: '**/coverage.cobertura.xml'

